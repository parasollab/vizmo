# Somehow this make file only works on the 02's 
# compiling on visual 9 gives the error 
# warning: error while loading VizmoLib.so: 
# couldn't load file "./VizmoLib.so": 
# 13617:/pub/sphere1/tcl8.1a2/bin/tclsh8.1: rld: 
# Fatal Error: unresolvable symbol in /pub/sphere1/tcl8.1a2/lib/libtcl8.1.so: 
# __new_cfgetospeed
# see if you can make it out!!!!!!!



# Generated automatically from Makefile.in by configure.
# This Makefile is used to create the example loadable module.
# It also illustrates how to take advantage of configuration
# exported by Tcl to set up Makefiles for shared libraries.
#
# SCCS: @(#) Makefile.in 1.5 97/08/14 19:01:21

PROJECT = VizmoLib

# The directory containing the Tcl sources and headers appropriate
# for this version of Tk ("srcdir" will be replaced or has already
# been replaced by the configure script):
TCL_GENERIC_DIR = /usr/lib/tcl8.0

# The directory containing the Tcl library archive file appropriate
# for this version of Tk:
TCL_BIN_DIR = /usr/bin

# Libraries to use when linking:
# LIBS = -L/pub/sphere1/tcl8.1a2/lib -ltcl8.1   -lm -lc

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

CC = g++ -fexceptions
SHLIB_CFLAGS =		
SHLIB_LD =	 $(CC) -shared -g 
SHLIB_SUFFIX =		.so
SHLIB_VERSION =		
SRC_DIR =		.


CFLAGS = -g
CC_SWITCHES = $(CFLAGS) -I${TCL_GENERIC_DIR} ${SHLIB_CFLAGS}

VTKINC	=	/share/include/vtk
VTKLIB	=	/share/lib
TCL81LIB =  	/usr/lib
TCL81INC =	/usr/include 
TK81LIB =	/usr/lib
TK81INC =	/usr/include
VTKINCS	 = -I$(VTKINC)
#VTKLIBS = -L$(VTKLIB)  -lVTKCommonTcl -lVTKGraphicsTcl 
VTKLIBS	 = -L$(VTKLIB)  -lVTKCommonTcl -lVTKGraphics -lVTKPatented
CXXOPTS	=	-O2 -DVERBOSE=0 -DINTERMEDIATE_FILES=1
# decide which version you want!
TKINCS	=   -I$(TK81INC) 
TCLINCS  = -I$(TCL81INC)
TKLIBS	=  -L$(TK81LIB) -ltk8.0 
TCLLIBS	 = -L$(TCL81LIB) -ltcl8.0


# -- for dynamic shared object library libmp.so

   OBPRM_DIR  = /users/burchanb/blackwidowers/OBPRM
   OBPRMINCS  = -I${OBPRM_DIR}
   OBPRM_LIB      = -L. -lobprm


RAPIDLIB_DIR  = /research/drwatson/dsmft/CD-libs/RAPID
RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID 
RAPID_INCL    = -I${RAPIDLIB_DIR}


VCLIP_DIR     = /research/drwatson/dsmft/CD-libs/VCLIP
VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
VCLIP_INCL    = -I${VCLIP_DIR}/include



AFLAGS    = -I. ${STL_INCL} ${NR_INCL} ${RAPID_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${DEFS} -I$(GMSLIB_DIR) -I$(MPLIB_DIR)


DEF = -DLINUX -DUSE_RAPID -DUNIX $(AFLAGS)


XLIBS	= -L/usr/X11R6/lib -lX11 -lXt 
LDFLAGS	=
CXXFLAGS = $(DEF) $(CXXOPTS) $(VTKINCS) $(TCLINCS) $(TKINCS) -I/pub/dsmft/STL -I/pub/dsmft/GMS/NR -I/pub/dsmft/CSTK/CSTK-1.22/cstk/src/include $(VCLIP_INCL) -I/pub/dsmft/RAPID/RAPID_v2_01 $(OBPRMINCS) -DVERBOSE=0 -DINTERMEDIATE_FILES=1

# -traditional

LIBS	 = $(LDFLAGS) $(VTKLIBS) $(TCLLIBS) $(TKLIBS) $(XLIBS) -lm -lGL  
REQ_OBJS = Path.o Query.o vizEnvironment.o vizObject.o vizRobotObject.o vizRoadmap.o
REQ_SRCS = Path.c Query.c vizEnvironment.c vizList.c vizRobotObject.c vizObject.c vizRoadmap.c

	
lib/VizmoLibLinux.so: VizmoLib.o $(REQ_OBJS)
	$(SHLIB_LD) $(SRC_DIR)/$(PROJECT).o $(REQ_OBJS) \
	-o lib/$(PROJECT)Linux$(SHLIB_SUFFIX) \
	$(OBPRM_LIB) ${VCLIPLIB} $(RAPIDLIB) \
	$(LDFLAGS) $(VTKLIBS) $(XLIBS) -lGL
VizmoLib.o: VizmoLib.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c VizmoLib.c -o VizmoLib.o   

vizRoadmap.o: vizRoadmap.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c vizRoadmap.c -o vizRoadmap.o   

vizEnvironment.o: vizEnvironment.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c vizEnvironment.c -o vizEnvironment.o   

vizList.o: vizList.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c vizList.c -o vizList.o   

vizRobotObject.o: vizRobotObject.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c vizRobotObject.c -o vizRobotObject.o   

vizObject.o: vizObject.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c vizObject.c -o vizObject.o   

Query.o: Query.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS)  -c Query.c -o Query.o   

Path.o: Path.c
	$(CC) $(CC_SWITCHES) $(CXXFLAGS) -c Path.c -o Path.o   


clean:
	rm -f *.o *$(SHLIB_SUFFIX) config.cache config.log config.status \
	 so_locations pkgIndex.tcl

