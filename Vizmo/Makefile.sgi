# somehow this make file only works on the 02's 
# compiling on visual 9 gives the error 
# warning: error while loading VizmoLib.so: 
# couldn't load file "./VizmoLib.so": 
# 13617:/pub/sphere1/tcl8.1a2/bin/tclsh8.1: rld: 
# Fatal Error: unresolvable symbol in /pub/sphere1/tcl8.1a2/lib/libtcl8.1.so: 
# __new_cfgetospeed
# see if you can make it out!!!!!!!



# Generated automatically from Makefile.in by configure.
# This Makefile is used to create the example loadable module.
# It also illustrates how to take advantage of configuration
# exported by Tcl to set up Makefiles for shared libraries.
#
# SCCS: @(#) Makefile.in 1.5 97/08/14 19:01:21

PROJECT = VizmoLib

# The directory containing the Tcl sources and headers appropriate
# For this version of Tk ("srcdir" will be replaced or has already
# been replaced by the configure script):
TCL_GENERIC_DIR =/pub/dsmft1/Software/sgi/tcl8.3.2/generic

# The directory containing the Tcl library archive file appropriate
# for this version of Tk:
TCL_BIN_DIR = /pub/dsmft1/Software/sgi/tcl8.3.2/unix

# Libraries to use when linking:

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

CC = CC -woff 3262 -o32   -O2 -exceptions
SHLIB_CFLAGS =		
SHLIB_LD =	 CC -shared -rdata_shared  -o32 -exceptions
SHLIB_SUFFIX =		.so
SHLIB_VERSION =		
SRC_DIR =		.


CFLAGS = 
CC_SWITCHES = $(CFLAGS) -I${TCL_GENERIC_DIR} ${SHLIB_CFLAGS}

TCLINCS  = -I/pub/dsmft1/Software/sgi/tcl8.3.2/generic
TCLLIBS  = -L/pub/dsmft1/Software/sgi/tcl8.3.2/unix -ltcl8.3.2

TKINCS  =   -I/pub/dsmft1/Software/sgi/tk8.3.2/generic
TKLIBS  =  -L/pub/dsmft1/Software/sgi/tcl8.3.2/unix -ltk8.3.2




VTKDIR	=	/pub/dsmft1/Software/sgi/vtk31
VTKINC	=	$(VTKDIR)/
VTKLIB	=	$(VTKDIR)/lib
VTKINCS	 = -I$(VTKINC)/common -I$(VTKINC)/graphics -I$(VTKINC)/patented 
#VTKLIBS = -L$(VTKLIB)  -lVTKCommonTcl -lVTKGraphicsTcl 
VTKLIBS	 = -L$(VTKLIB)  -lVTKCommonTcl -lVTKGraphics 
#-lVTKPatented
CXXOPTS	=	-o32 -O2 -DVERBOSE=0 -DINTERMEDIATE_FILES=1
# decide which version you want!

# -- for dynamic shared object library libgms.so
   OBPRM_DIR = /pub/rlab4/burc/OBPRM
   OBPRMLIB     = -L/pub/dsmft/VIZMO/Vizmo/lib -lobprm

CSTKLIB_DIR  = /pub/dsmft/CD-libs/sgi/CSTK/CSTK-1.22/cstk
CSTKLIB      = -L${CSTKLIB_DIR}/lib -lcstk
CSTK_INCL    = -I${CSTKLIB_DIR}/src/include

RAPIDLIB_DIR  = /pub/dsmft/CD-libs/sgi/RAPID/RAPID_v2_01
RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID 
RAPID_INCL    = -I${RAPIDLIB_DIR}


VCLIP_DIR     = /pub/dsmft/CD-libs/sgi/VCLIP
VCLIPLIB_DIR  = ${VCLIP_DIR}/lib
VCLIPLIB      = -L${VCLIPLIB_DIR} -lvclip
VCLIP_INCL    = -I${VCLIP_DIR}/include

STL_INCL  = -I/pub/dsmft/STL


AFLAGS    = -I. ${STL_INCL}  ${RAPID_INCL} ${CSTK_INCL} ${VCLIP_INCL} ${DEFS} -I$(OBPRM_DIR) 


DEF = -DSGI -DUNIX $(AFLAGS) -DUSE_RAPID -DVIZMO


XLIBS	= -lX11 -lXt 
LDFLAGS	= -rpath $(VTKLIB) $(TCLLIB) 
CXXFLAGS = $(DEF) $(CXXOPTS)  $(TCLINCS) $(TKINCS) $(VTKINCS)  -I/pub/dsmft/STL ${CSTK_INCL} ${VCLIP_INCL ${RAPID_INCL}  -DVERBOSE=0 -DINTERMEDIATE_FILES=1 
LIBS	 = $(LDFLAGS) $(VTKLIBS) $(TCLLIBS) $(TKLIBS) $(XLIBS) -lm -lGL  
REQ_OBJS = Path.o Query.o vizEnvironment.o vizList.o  vizRobotObject.o \
		vizObject.o  vizRoadmap.o
REQ_SRCS = Path.c Query.c vizEnvironment.c vizList.c vizRobotObject.c vizObject.c vizRoadmap.c


lib/VizmoLibSgi.so: VizmoLib.o $(REQ_OBJS) 
	$(SHLIB_LD) $(SRC_DIR)/$(PROJECT).o $(REQ_OBJS)  -o lib/$(PROJECT)Sgi$(SHLIB_SUFFIX) \
	-rpath /pub/dsmft/VIZMO/Vizmo/lib:$(CSTKLIB_DIR):${VCLIPLIB_DIR}:$(RAPIDLIB_DIR) \
	$(OBPRMLIB)  $(CSTKLIB) ${VCLIPLIB} $(RAPIDLIB)\
	$(LDFLAGS) $(VTKLIBS) $(XLIBS) -lGL

VizmoLib.o: VizmoLib.c
	$(CC) -c VizmoLib.c   $(CC_SWITCHES) $(CXXFLAGS)

vizEnvironment.o: vizEnvironment.c
	$(CC) -c vizEnvironment.c   $(CC_SWITCHES) $(CXXFLAGS)

vizList.o: vizList.c
	$(CC) -c vizList.c   $(CC_SWITCHES) $(CXXFLAGS)

vizRoadmap.o: vizRoadmap.c
	$(CC) -c vizRoadmap.c   $(CC_SWITCHES) $(CXXFLAGS)

vizRobotObject.o: vizRobotObject.c
	$(CC) -c vizRobotObject.c   $(CC_SWITCHES) $(CXXFLAGS)

vizObject.o: vizObject.c
	$(CC) -c vizObject.c   $(CC_SWITCHES) $(CXXFLAGS)

Query.o: Query.c
	$(CC) -c Query.c   $(CC_SWITCHES) $(CXXFLAGS)

Path.o: Path.c
	$(CC) -c Path.c   $(CC_SWITCHES) $(CXXFLAGS)

clean:
	rm -f *.o *$(SHLIB_SUFFIX) config.cache config.log config.status \
	 so_locations pkgIndex.tcl

