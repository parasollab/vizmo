Index: modelgraph/Makefile.linux
===================================================================
--- modelgraph/Makefile.linux	(revision 159)
+++ modelgraph/Makefile.linux	(working copy)
@@ -16,7 +16,7 @@
 
 CFLAGS     = $(OPTS) $(INCLUDE) 
 CXXFLAGS   = $(CFLAGS) 
-TARGET = ../lib/libmodelgraph.a
+TARGET = ../lib/libmodelgraph.so
 all: $(TARGET)
 
 #--------------------------------------------------------------------
@@ -32,8 +32,7 @@
 objs: ${OBJS}
 #--------------------------------------------------------------------
 $(TARGET): objs
-	ar cru $(TARGET) $(OBJS)
-#	libtool -static -o $(TARGET) $(OBJS)
+	$(CC) -shared $(OBJS) -Wl,-soname=`basename $@`.0 -o $@
 clean:
 	rm -f *.o $(TARGET) Dependencies
 	touch Dependencies
Index: src/gui/gui.cpp
===================================================================
--- src/gui/gui.cpp	(revision 159)
+++ src/gui/gui.cpp	(working copy)
@@ -21,6 +21,7 @@
 ///Initialize gui objects, such as creating windows, toolbars, ...etc.
 bool VizGUI_Init(int argc, char ** argv)
 {
+    glutInit(&argc, argv);
     QApplication::setColorSpec( QApplication::CustomColor );
     QApplication app(argc, argv);
     
Index: src/gui/gui.h
===================================================================
--- src/gui/gui.h	(revision 159)
+++ src/gui/gui.h	(working copy)
@@ -1,5 +1,6 @@
 #ifndef _VIZMO2_GUI_H_
 #define _VIZMO2_GUI_H_
+#include <glut.h>
 /**
  * Initialize gui objects, such as creating windows, toolbars, ...etc.
  */
Index: src/gui/Makefile.linux
===================================================================
--- src/gui/Makefile.linux	(revision 159)
+++ src/gui/Makefile.linux	(working copy)
@@ -2,8 +2,8 @@
 VIZMO_DIR = ../..
 include $(VIZMO_DIR)/M_incl
 
-MOC      = /usr/bin/moc-qt4
-TARGET   = ../../lib/libvgui.a
+MOC      = /usr/lib/qt4/bin/moc
+TARGET   = ../../lib/libvgui.so
 
 ####### Output directory
 
@@ -25,8 +25,7 @@
 ####### Build rules
 
 all: $(OBJECTS) $(OBJMOC)
-	ar ruv $(TARGET) ${OBJECTS} $(OBJMOC)
-#	libtool -static -o $(TARGET) ${OBJECTS} $(OBJMOC)
+	$(CC) -shared $(OBJECTS) $(OBJMOC) -Wl,-soname=`basename $(TARGET)`.0 -o $(TARGET)
 
 $(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
 	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
Index: src/Makefile.linux
===================================================================
--- src/Makefile.linux	(revision 159)
+++ src/Makefile.linux	(working copy)
@@ -27,7 +27,7 @@
 #--------------------------------------------------------------------
 
 $(target):  ${EnvOBJ} GUIOBJ_d ${OBJS}
-	$(CXX) $(CXXFLAGS) -o $@ $(OBJS) ${EnvOBJ} ${GUIOBJ} ${LIB}
+	$(CXX) $(CXXFLAGS) -Wl,-rpath=/usr/lib/vizmo++ -o $@ $(OBJS) ${EnvOBJ} ${GUIOBJ} ${LIB}
 
 #$(alias): $(target)
 #	rm -f $@
Index: src/vizmo2.h
===================================================================
--- src/vizmo2.h	(revision 159)
+++ src/vizmo2.h	(working copy)
@@ -177,7 +177,7 @@
     bool getCD_value(){ return is_collison;}//used in roadmap.cpp:printRobCfg()
 
     //void Node_CD(double *cfg);
-    void vizmo::Node_CD(CCfg * cfg);
+    void Node_CD(CCfg * cfg);
     double * m_nodeCfg;
     bool m_IsNode;
 
Index: mathtool/Makefile.linux
===================================================================
--- mathtool/Makefile.linux	(revision 159)
+++ mathtool/Makefile.linux	(working copy)
@@ -17,7 +17,7 @@
  CFLAGS     = $(OPTS) $(INCLUDE) -I.
  CXXFLAGS   = $(CFLAGS) 
  
- TARGET = ../lib/libmathtool.a
+ TARGET = ../lib/libmathtool.so
 
 all: $(TARGET)
 
@@ -34,8 +34,7 @@
 objs: ${OBJS}
 #--------------------------------------------------------------------
 $(TARGET): objs
-	ar cru $(TARGET) $(OBJS)
-#	libtool -static -o $(TARGET) $(OBJS)
+	$(CC) -shared $(OBJS) -Wl,-soname=`basename $@`.0 -o $@
 clean:
 	rm -f *.o $(TARGET) Dependencies
 	touch Dependencies
Index: CollisionDetection/Makefile.linux
===================================================================
--- CollisionDetection/Makefile.linux	(revision 159)
+++ CollisionDetection/Makefile.linux	(working copy)
@@ -2,16 +2,13 @@
 
 include $(VIZMO_DIR)/M_incl
 
-TARGET=$(VIZMO_DIR)/lib/libCD.a
+TARGET=$(VIZMO_DIR)/lib/libCD.so
 
 OBJECTS = CollisionDetection.o
 
-
 $(TARGET): $(OBJECTS)
-	ar ruv $@ $(OBJECTS)
-#	libtool -static -o $@ $(OBJECTS)
+	$(CC) -shared $(OBJECTS) -Wl,-soname=`basename $@`.0 -o $@
 
-
 clean:
 	rm -f ${TARGET} ${OBJECTS} Dependencies
 	touch Dependencies
Index: M_incl
===================================================================
--- M_incl	(revision 159)
+++ M_incl	(working copy)
@@ -5,7 +5,7 @@
 
  CXX = g++
 
- OPTS = -O2 -MMD -W #-Wall
+ OPTS = -O2 -MMD -W -fpic #-Wall
  #OPTS = -g -MMD -W
 
 #--------------------------------------------------------------------
@@ -30,10 +30,10 @@
  PLUM_INCL = -I$(PLUM_DIR)/Plum -I$(PLUM_DIR)/mathtool -I$(PLUM_DIR)/modelgraph
  PLUM_LIB = -L$(PLUM_DIR)/lib -lPlum -lmodelgraph -lmathtool
 
-QT4DIR = /usr/
+QT4DIR = /usr/lib/qt4
 #QT_INC  = -I$(QT4DIR)/include -I$(QT4DIR)/mkspecs/default
 
- QT_INC = -I$(QT4DIR)/include -I$(QT4DIR)/include/QtGui -I$(QT4DIR)/include/QtCore -I$(QT4DIR)/include/QtOpenGL -I$(QT4DIR)/include/Qt3Support -I$(QT4DIR)/mkspecs/default -DQT3_SUPPORT -I.
+ QT_INC = -I$(QT4DIR)/include -I$(QT4DIR)/include/QtGui -I$(QT4DIR)/include/QtCore -I$(QT4DIR)/include/QtOpenGL -I$(QT4DIR)/include/Qt3Support -I$(QT4DIR)/mkspecs/default -I/usr/include/Qt -I/usr/include/QtGui -I/usr/include/QtCore -I/usr/include/QtOpenGL -I/usr/include/Qt3Support -DQT3_SUPPORT -I.
 
  #QT_LIBS = $(SUBLIBS) -Wl,-rpath,$(QT4DIR)/lib -L$(QT4DIR)/lib  -lqt -lpthread -lXext
   QT_LIBS = $(SUBLIBS)  -L$(QT4DIR)/lib  -lQt3Support -lQtCore -lQtGui -lQtOpenGL -lQtNetwork  -lpthread -lXext -lz 
@@ -47,13 +47,9 @@
 # collision detection
 #--------------------------------------------------------------------------
 # RCD_DIR = $(VIZMO_DIR)
- RCD_DIR = /research/matlock/users/xinyut/Protein_RNA/folding/CD_libs/
+ RAPIDLIB      = -lRAPID
+ RAPID_INCL    = -I/usr/include/RAPID
 
- RAPID_DIR     = ${RCD_DIR}/RAPID
- RAPIDLIB_DIR  = ${RAPID_DIR}
- RAPIDLIB      = -L${RAPIDLIB_DIR} -lRAPID
- RAPID_INCL    = -I${RAPID_DIR}
-
  CD_DIR = $(VIZMO_DIR)
  CD_INCL = -I$(CD_DIR)/CollisionDetection -I$(CD_DIR)/Plum
 # CD_LIB = -L$(CD_DIR)/lib -lCD                    
@@ -75,6 +71,6 @@
 .SUFIXES: .cpp
 
 .cpp.o:
-	${CXX} ${CXXFLAGS} -D_DARWIN -c $< -o $@
-	cat $*.d >> Dependencies
+	${CXX} ${CXXFLAGS} -c $< -o $@
+	cat `basename $*.d` >> Dependencies
 	rm -f $*.d
Index: GL/Makefile.linux
===================================================================
--- GL/Makefile.linux	(revision 159)
+++ GL/Makefile.linux	(working copy)
@@ -1,13 +1,12 @@
 VIZMO_DIR=..
 include $(VIZMO_DIR)/M_incl
 
-TARGET=$(VIZMO_DIR)/lib/libgli.a
+TARGET=$(VIZMO_DIR)/lib/libgli.so
 
 OBJECTS = gli.o gliCamera.o gliDataStructure.o gliPickBox.o gliTransTool.o gliFont.o gliDump.o
 
 $(TARGET): $(OBJECTS)
-	ar ruv $@ $(OBJECTS)
-#	libtool -static -o $@ $(OBJECTS)
+	$(CC) -shared $(OBJECTS) -Wl,-soname=`basename $@`.0 -o $@
 
 clean:
 	rm -f ${TARGET} ${OBJECTS} Dependencies
Index: Documentation/DoxygenConfig
===================================================================
--- Documentation/DoxygenConfig	(revision 159)
+++ Documentation/DoxygenConfig	(working copy)
@@ -30,7 +30,7 @@
 # If a relative path is entered, it will be relative to the location 
 # where doxygen was started. If left blank the current directory will be used.
 
-OUTPUT_DIRECTORY       = /research/umbrella/dsmft/users/aimee/vizmoQT4_Papers/Doc
+OUTPUT_DIRECTORY       = .
 
 # The OUTPUT_LANGUAGE tag is used to specify the language in which all 
 # documentation generated by doxygen is written. Doxygen will use this 
@@ -301,7 +301,7 @@
 # directories like "/usr/src/myproject". Separate the files or directories 
 # with spaces.
 
-INPUT                  = "/research/umbrella/dsmft/users/aimee/vizmoQT4_Papers/vizmo2"
+INPUT                  = ..
 
 # If the value of the INPUT tag contains directories, you can use the 
 # FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp 
Index: Plum/Makefile.linux
===================================================================
--- Plum/Makefile.linux	(revision 159)
+++ Plum/Makefile.linux	(working copy)
@@ -4,7 +4,7 @@
 Env_DIR = EnvObj
 Map_DIR = MapObj
 
-TARGET=../lib/libPlum.a
+TARGET=../lib/libPlum.so
 
 OBJECTS = Plum.o PlumState.o PlumUtil.o
 
@@ -15,8 +15,7 @@
 MapOBJ = ${Map_DIR}/MapLoader.o  ${Map_DIR}/MapModel.o  ${Map_DIR}/Cfg.o 
 
 $(TARGET): ${OBJECTS} ${EnvOBJ} ${MapOBJ}
-	ar ruv $@  ${OBJECTS} ${EnvOBJ} ${MapOBJ}
-#	libtool -static -o $@  ${OBJECTS} ${EnvOBJ} ${MapOBJ}
+	$(CC) -shared ${OBJECTS} ${EnvOBJ} ${MapOBJ} -Wl,-soname=`basename $@`.0 -o $@
 
 clean:
 	rm -f ${TARGET} ${OBJECTS} ${EnvOBJ} ${MapOBJ} Dependencies
