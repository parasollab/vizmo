#############################################################################
# Makefile for building: gui
# Generated by qmake (1.02a) on: Wed Sep 18 16:05:04 2002
# Project:  gui.pro
# Template: app
# Command: $(QMAKE) gui.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -g -pipe -Wall -W -DQT_NO_DEBUG -MMD
CXXFLAGS = ${CFLAGS}
LEXFLAGS = 
YACCFLAGS= -d
LINK     = g++
LFLAGS   = 

GL_LIB = -lglut -lGLU -lGL -lm

GLI_DIR = ../..
GLI_INCL = -I$(GLI_DIR)
GLI_LIB = -L$(GLI_DIR)/GL/lib -lgli

PLUM_DIR = ../..
PLUM_INCL = -I$(PLUM_DIR)/Plum -I$(PLUM_DIR)/mathtool -I$(PLUM_DIR)/modelgraph
PLUM_LIB = -L$(PLUM_DIR)/lib -lPlum -lmodelgraph -lmathtool

Vizmo_DIR = ..
Vizmo_INC = -I$(Vizmo_DIR)

LIBS     = $(SUBLIBS) -Wl,-rpath,$(QTDIR)/lib -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt -lXext -lX11 -lXmu -lXi -lm -L/usr/local/lib $(GLI_LIB) $(GL_LIB) $(PLUM_LIB) 

INCPATH  = -I. -I/usr/local/include -I$(QTDIR)/include -I$(QTDIR)/mkspecs/default $(PLUM_INCL) $(GLI_INCL) $(Vizmo_INC)

AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY) -p
COPY_DIR = $(COPY) -pR
DEL_FILE = rm -f
DEL_DIR  = rmdir
MOVE     = mv

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = gui.h \
		main_win.h \
		scene_win.h \
		animation_gui.h
SOURCES = gui.cpp \
		main_win.cpp \
		scene_win.cpp \
		animation_gui.cpp
OBJECTS = gui.o \
		main_win.o \
		scene_win.o \
		animation_gui.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_main_win.cpp moc_scene_win.cpp moc_animation_gui.cpp
OBJMOC = moc_main_win.o moc_scene_win.o moc_animation_gui.o
DIST	   = 
QMAKE_TARGET = gui
DESTDIR  = 
TARGET   = gui

first: all
####### Implicit rules

.SUFFIXES: .cpp

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<
	cat $*.d >> Dependencies
	rm -f $*.d

####### Build rules

#all: Makefile $(TARGET)

all: $(OBJECTS) $(OBJMOC)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

mocables: $(SRCMOC)

$(MOC): 
	( cd $(QTDIR)/src/moc ; $(MAKE) )

Makefile: gui.pro  #$(QTDIR)/mkspecs/default/qmake.conf 
	$(QMAKE) gui.pro
qmake: 
	@$(QMAKE) gui.pro

dist: 
	@mkdir -p .tmp/gui && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/gui/ && ( cd `dirname .tmp/gui` && $(TAR) gui.tar gui && $(GZIP) gui.tar ) && mv `dirname .tmp/gui`/gui.tar.gz . && rm -rf .tmp/gui

mocclean:
	-rm -f $(OBJMOC) $(SRCMOC)

clean: mocclean
	-rm -f $(OBJECTS) Dependencies
	-rm -f *~ core *.core
	touch Dependencies


####### Sub-libraries

distclean: clean
	-rm -f $(TARGET) $(TARGET)

FORCE:

####### Compile

gui.o: gui.cpp gui.h \
		main_win.h \
		animation_gui.h

main_win.o: main_win.cpp main_win.h \
		scene_win.h \
		animation_gui.h \
		icon/Eye.xpm \
		icon/Folder.xpm \
		icon/Pen.xpm \
		icon/Camera.xpm \
		icon/Board.xpm \
		icon/Flag.xpm

scene_win.o: scene_win.cpp scene_win.h \
		main_win.h

animation_gui.o: animation_gui.cpp animation_gui.h  

moc_main_win.o: moc_main_win.cpp main_win.h 

moc_scene_win.o: moc_scene_win.cpp scene_win.h 

moc_animation_gui.o: moc_animation_gui.cpp animation_gui.h

moc_main_win.cpp: $(MOC) main_win.h
	$(MOC) main_win.h -o moc_main_win.cpp

moc_scene_win.cpp: $(MOC) scene_win.h
	$(MOC) scene_win.h -o moc_scene_win.cpp

moc_animation_gui.cpp:  $(MOC) animation_gui.h
	$(MOC) animation_gui.h -o moc_animation_gui.cpp

include Dependencies














