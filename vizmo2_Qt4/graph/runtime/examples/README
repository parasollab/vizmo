This directory contains examples illustrating the parallel communication
primitives, as well as various benchmarks and test suites.  Please refer to
stapl/include/runtime/primitives.h for documentation about the functionality
provided by the primitives.

The primitives are designed to be independent of STAPL, although they do have
an emphasis on supporting STL and STAPL code.  As such, you do not need to
check out and use all of STAPL to use these examples, since they only
demonstrate using the primitives, and not the higher level STAPL abstractions.

The included GNUmakefile demonstrates how to compile the primitives, and other
components of the runtime system, into runtime.o, and gives recommendations
for linking and use on a variety of currently supported platforms.


Examples:
-helloWorld.cc: a parallel "hello world" demonstrating async_rmi()
-objectReg.cc: simple registration and communication between per-thread containers
-innerProduct.cc: implementation of a parallel inner product, similar to STL
-sampleSort.cc: implementation of parallel sample sort on random integer data
-jacobi.cc: implementation of a parallel jacobi iterative solver

Benchmarks:
-benchmarkLatency.cc: ping-pong latency
-benchmarkFenceLatency.cc: rmi_fence latency
-benchmarkOverhead.cc: rmi request creation overhead

Test Suites:
-testArgTransfer.cc: stresses the use of different arguments types
-testCommPatterns.cc: stress various communication patterns


Determining the Target Platform, P, and Runtime Implementation, R:
> gmake
displays a list of supported platforms and runtime implementations.  Select
the most appropriate ones for your system, and substitute for P and S below.
The provided GNUmakefiles are starting points.  Look at the specific .cc files
(e.g., mpi_primitives.cc) for additional compile-line options and
implementation-specific documentation.

Compiling runtime.o:
> gmake platform=P rts=R runtime.o

Compiling and Running the Examples (MPI Implementation):
> gmake platform=P rts=MPI helloWorld
> mpirun -np N ./helloWorld
where N is the number of threads

Compiling and Running the Examples (THREAD Implementation):
> gmake platform=P rts=PTHREAD helloWorld
> export STAPL_NUM_THREADS=N; ./helloWorld    #for using bash/sh related shell
> setenv STAPL_NUM_THREADS N; ./helloWorld    #for using tcsh related shell
where N is the number of threads

Compiling and Executing Everything:
> gmake platform=P rts=R runAll
