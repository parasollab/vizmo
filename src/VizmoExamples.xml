<!--XML with support for SparkRegion and RegionRRT/-->
<!--Place in environment folder to test /-->

<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning>
  <MPProblem>

    <!-- Example input, resolution defaults computed automatically. Can set
         through environment.-->
    <!--Environment filename=narrow.env" positionRes="0.10"
         positionResFactor="0.2" orientationRes="0.20"/-->
    <Environment filename="s.env" saveDofs="false"/>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <ScaledEuclidean label= "scaledEuclidean" scale ="0.5"/>
      <CenterOfMass label="com"/>
      <KnotTheory label="knot"/>
      <Manhattan label="manhattan"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333" normalize="false"/>
      <RMSD label="rmsd"/>
      <LPSwept label="LPSwept" posRes="5" oriRes="5" useBBox="true" lpLabel="sl"/>
      <BinaryLPSwept label="BLPSwept" posRes="5" oriRes="5" useBBox="true" lpLabel="sl"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="cd1" method="RAPID"/>
      <CollisionDetection label="cd2" method="PQP"/>
      <CollisionDetection label="cd3" method="VCLIP"/>
      <CollisionDetection label="cd4" method="PQP_SOLID"/>
      <NodeClearanceValidity label="nc" delta="0.3" dmLabel="euclidean" nfLabel="Nearest"/>
      <NegateValidity label="nv" vcLabel="cd1"/>
      <MedialAxisClearance label="mac" maClearance="0.5" vcLabel="cd2" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true" positional="true"
        epsilon="0.01" historyLength="5"/>
      <ComposeValidity label="cv" operator="AND">
        <ValidityChecker label="cd2"/>
        <ValidityChecker label="mac"/>
      </ComposeValidity>
      <AlwaysTrueValidity label="alwaysTrue"/>
      <ObstacleClearance label="oc" obstClearance="2.5" vcLabel="cd4" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true" positional="true"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="false" k="10"/>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false" k="1"/>
      <BruteForceNF label="BFNFAll" dmLabel="euclidean" k="0"/>
      <HierarchicalNF label="HierarchicalNF" nfLabel="BFNF" nfLabel2="RandomNF" dmLabel=""/>
      <HopLimitNF label="HLNF" hoplimit="2" dmLabel="" nfLabel="BFNF"/>
      <OptimalNF label="OptimalK" nfLabel="BFNF"/>
      <RadiusNF label="RadiusNF" dmLabel="euclidean" radius="5"/>
      <RandomNF label="RandomNF" dmLabel="euclidean" k="5"/>
      <!--DPESNF label="BFNF" dmLabel="euclidean"/-->
      <!--MPNNNF label="BFNF" dmLabel="euclidean" use_rotational="0" use_scaling="0"/-->
      <!--CGALNF label="CGALNF" dmLabel="euclidean"/-->
      <!--SpillTreeNF label="BFNF" dmLabel="euclidean"/-->
      <!--MetricTreeNF label="BFNF" dmLabel="euclidean"/-->
      <BandsNF label="RBandsNF" dmLabel="euclidean" max="8" min="8"  policy="closest" k="3"/>
      <BandsNF label="RbandNF_2bands_4k" debug="false" dmLabel="euclidean">
        <RBand label="first" max = '8' k='8' policy='closest' dmLabel="euclidean"/>
        <RBand label="second" min = '8' max = '64' k='8' policy='random' dmLabel="euclidean"/>
      </BandsNF>
      <BandsNF label="DbandNF" debug="false" dmLabel="euclidean">
        <DBand label="first" min='.1' max='.3' k='16' policy='closest' dmLabel="euclidean"/>
      </BandsNF>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="cd1"/>
      <UniformRandomSampler label="UniformRandomFreePQP" vcLabel="cd4"/>
      <ObstacleBasedSampler label="OBPRM" vcLabel="cd1" useBBX="false" pointSelection="cspace"
        dmLabel="euclidean" stepSize="0.0" nShellsColl="0" nShellsFree="1" debug="false"/>
      <GaussianSampler label="Gauss" vcLabel="cd1" d="0.2" dmLabel="euclidean" useBBX="false"/>
      <!--BridgeTestSampler label="Bridge" vcLabel="cd1" d="0.2" dmLabel="euclidean" useBBX="true"/-->
      <!--MedialAxisSampler label="MAPRM" vcLabel="cd2" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact"
        useBBX="true" debug="false" positional="true"
        epsilon="0.01" historyLength="100"/-->
      <!--NegateSampler label="negateFree" method="UniformRandomFree"/-->
      <!--GridSampler label="Grid" vcLabel="cd1" useBBX="true">
        <Dimension index="0" points="10"/>
        <Dimension index="1" points="5"/>
        <Dimension index="2" points="5"/>
      </GridSampler-->
      <!--MixSampler label="MixSampler">
        <Sampler label="UniformRandomFree" p="0.8"/>
        <Sampler label="UniformRandom" p="0.2"/>
      </MixSampler-->
      <UniformObstacleBasedSampler label="UOBPRM" vcLabel="cd1" useBBX="false" dmLabel="euclidean" d="0.02" />
      <!--UniformMedialAxisSampler label="UMAPRM" vcLabel="cd4" useBBX="true" dmLabel="euclidean" d="2.00" t="10"
        clearanceType="exact" penetrationType="exact" debug="false" positional="true"/-->
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="cd1"/>
      <StraightLine label="slAlwaysTrue" binaryEvaluation="true" vcLabel="alwaysTrue"/>
      <RotateAtS label="ras" binaryEvaluation="true" vcLabel="cd1" s="0.5" saveIntermediates="false"/>
      <TransformAtS label="tas" binaryEvaluation="true" vcLabel="cd1" s="0.5" saveIntermediates="false"/>
      <AStarDistance label="asd" vcLabel="cd1" dmLabel="euclidean"
        maxTries="6" numNeighbors="10" histLength="10" debug="true"/>
      <AStarClearance label="asc" vcLabel="cd2" maxTries="6" numNeighbors="3" histLength="10"
        dmLabel="euclidean" clearanceType="exact" penetrationType="exact"
        clearanceRays="2" penetrationRays="2" useBBX="true" positional="true" debug="false"/>
      <MedialAxisLP label="malp" vcLabel="cd2" dmLabel="euclidean"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        epsilon="0.01" historyLength="5" positional="true" debug="false"
        macEpsilon="0.5" maxIter="10" saveIntermediates="false"/>
      <ToggleLP label="togglelp" vcLabel="cd1" dmLabel="euclidean" lpLabel="sl"
        maxIter="5" recordKeep="false"/>
      <ApproxSpheres label="apsph" vcLabel="cd2" dmLabel="euclidean" saveIntermediates="false"
        clearanceType="exact" penetrationType="exact"/>
      <HierarchicalLP label="hlp">
        <LocalPlanner method="sl"/>
        <LocalPlanner method="ras"/>
        <LocalPlanner method="malp"/>
      </HierarchicalLP>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0" randomOrientation="true"/>
      <BasicExtender label="BESO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0" randomOrientation="false"/>
      <MixExtender label="ME" debug="true">
        <Extender label="BERO" probability="0.1"/>
        <Extender label="BESO" probability="0.1"/>
        <Extender label="ROVRO" probability="0.1"/>
        <Extender label="ROVSO" probability="0.1"/>
        <Extender label="RTT" probability="0.1"/>
        <Extender label="TORO" probability="0.1"/>
        <Extender label="TOSO" probability="0.1"/>
        <Extender label="TCSO" probability="0.1"/>
        <Extender label="TMAP" probability="0.1"/>
      </MixExtender>
      <RandomObstacleVector label="ROVRO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0"/>
      <RandomObstacleVector label="ROVSO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0" randomOrientation="false"/>
      <RotationThenTranslation label="RTT" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0" lpLabel="sl"/>
      <TraceCSpaceObstacle label="TCSO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0"/>
      <TraceMAPush label="TMAP" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0"
        clearanceType="exact" penetrationType="exact"/>
      <TraceObstacle label="TORO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0"/>
      <TraceObstacle label="TOSO" debug="false"
        dmLabel="euclidean" vcLabel="cd1" delta="10.0" randomOrientation="false"/>
    </Extenders>

   <PathModifiers>
      <CombinedPathModifier label="CombinedPathModifier" debug="true" pathFile="Basic.combined.path" >
        <Modifier label="ShortcuttingPathModifier"/>
        <Modifier label="MedialAxisPathModifier"/>
        <Modifier label="ResamplePathModifier"/>
      </CombinedPathModifier>
      <MedialAxisPathModifier label="MedialAxisPathModifier" pathFile="Basic.maSmooth.path"
        lpLabel="sl" malpLabel="malp" debug="false"/>
      <ResamplePathModifier label="ResamplePathModifier" debug="false"
        pathFile="Basic.resample.path" mapFile="Basic.resample.map"
        typeName="MAX_CLEARANCE"
        numResamples="1" stepSize="0.3" userValue="0.3"
        vcLabel="cd2" dmLabel="euclidean" lpLabel="sl"
        clearanceType="exact" penetrationType="exact" useBBX="true" positional="true"/>
      <ShortcuttingPathModifier label="ShortcuttingPathModifier" pathFile="Basic.smooth.path"
        dmLabel="euclidean" lpLabel="sl" debug="false"/>
    </PathModifiers>

    <Connectors>
      <CCsConnector label="ConnectCCs" nfLabel="BFNF" lpLabel="sl" k="5" smallcc="5"/>
      <ClosestVE label="ClosestVE" kClosest="3" nfLabel="BFNF" lpLabel="sl"/>
      <NeighborhoodConnector label="Closest" nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false" debug="false"/>
      <NeighborhoodConnector label="SparkPRMConnector" nfLabel="Nearest"
        lpLabel="sl" checkIfSameCC="true"/>
      <NeighborhoodConnector label="ToggleConnect" nfLabel="BFNF" lpLabel="sl"
        countFailures="true" fail="1" CheckIfSameCC="false"/>
      <NeighborhoodConnector label="ClosestAlwaysTrue" nfLabel="BFNF" lpLabel="slAlwaysTrue" checkIfSameCC="false"/>
      <NeighborhoodConnector label="AllToAll" nfLabel="BFNFAll" lpLabel="sl" checkIfSameCC="false"/>
      <AdaptiveConnector label="AdaptiveCS" nfLabel="" lpLabel="sl" percentRandom="0.5" checkIfSameCC="false" debug="true" uniformProbability="false" fixedCost="false" fixedReward="false">
        <NeighborFinder Method="BFNF"/>
        <NeighborFinder Method="Nearest"/>
        <NeighborFinder Method="RandomNF"/>
        <NeighborFinder Method="BFNFAll"/>
      </AdaptiveConnector>
      <!--PreferentialAttachment label="Preferential" lp_method="sl" nf="BFNF" k="2" fail="5" unconnected="true"
        random="true" dm_method="euclidean" CheckIfSameCC="false"/-->
      <RewireConnector label="OptimalRewire" nfLabel="OptimalK" lpLabel="sl"/>
    </Connectors>

    <Metrics>
      <NumNodesMetric label="NumNodes"/>
      <NumEdgesMetric label="NumEdges"/>
      <CoverageMetricRoadmapSet label="CoverageRoadmapSet" filename="coverage" outfilename="Basic" computeAllCCs="false">
        <Connector label="Closest"/>
      </CoverageMetricRoadmapSet>
      <CoverageMetricVectorSet label="CoverageVectorSet" filename="coverage" outfilename="Basic" computeAllCCs="false">
        <Connector label="Closest"/>
      </CoverageMetricVectorSet>
      <CoverageDistanceMetric label="CoverageDistance" filename="coverage" outfilename="Basic" dmLabel="euclidean"/>
      <ConnectivityMetricRoadmapSet label="ConnectivityRoadmapSet" filename="connectivity" outfilename="Basic">
        <Connector label="Closest"/>
      </ConnectivityMetricRoadmapSet>
      <ConnectivityMetricVectorSet label="ConnectivityVectorSet" filename="connectivity" outfilename="Basic">
        <Connector label="Closest"/>
      </ConnectivityMetricVectorSet>
      <DiameterMetric label="Diameter"/>
      <CCDistanceMetric label="CCDistance" dmLabel="euclidean"/>
      <TimeMetric label="TimeInSec"/>
    </Metrics>

    <MapEvaluators>
      <TrueEvaluation label="TrueEvaluator" />
      <Query label="Query" queryFile="s.query" pathFile="Basic.path" dmLabel="euclidean"
        lpLabel="sl" debug="false" recordKeep="true" pmLabel="ShortcuttingPathModifier">
        <NodeConnectionMethod method="Closest"/>
      </Query>
      <LazyQuery label="LazyQuery" queryFile="s.query" pathFile="Basic.path"
        lpLabel="sl" dmLabel="euclidean" vcMethod="cd1" graphSearchAlg="astar"
        intermediateFiles="false" deleteNodes="false" debug="false" recordKeep="true"
        numEnhance="10" d="0.5" pmLabel="">
        <NodeConnectionMethod method="ClosestAlwaysTrue"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyQuery>
      <LazyToggleQuery label="LazyToggleQuery" queryFile="s.query" pathFile="Basic.path"
        lpLabel="sl" dmLabel="euclidean" vcMethod="cd1" graphSearchAlg="astar" intermediateFiles="false"
        deleteNodes="false" iterative="true" debug="false" recordKeep="true" pmLabel="">
        <NodeConnectionMethod method="ClosestAlwaysTrue"/>
        <ToggleConnectionMethod method="LazyToggleConnect"/>
        <Resolution mult="27"/>
        <Resolution mult="16"/>
        <Resolution mult="1"/>
      </LazyToggleQuery>
      <PrintMapEvaluation label="PrintMap" base_name="Basic"/>
      <ConditionalEvaluator label="NodesEval" metric_method="NumNodes" value="10000" operator=">="/>
      <ConditionalEvaluator label="EdgesEval" metric_method="NumEdges" value="10000" operator=">"/>
      <ConditionalEvaluator label="FreqNodeEval" metric_method="NumNodes" value="50" operator="%"/>
      <NegateEvaluator label="Neg" evalLabel="NodesEval"/>
      <ComposeEvaluator label="Com1" operator="or">
        <Evaluator label="NodesEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="Com2" operator="and">
        <Evaluator label="Com1"/>
        <Evaluator label="PrintMap"/>
      </ComposeEvaluator>
      <ComposeEvaluator label="ModQuery" operator="and">
        <Evaluator label="FreqNodeEval"/>
        <Evaluator label="Query"/>
      </ComposeEvaluator>
    </MapEvaluators>

    <!-- For **UAStrategy use** -->
    <!--partitioning_methods>
      <Kmeans label="kmeans" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </Kmeans>
      <Growable label="growable" destination="uas/">
        <Feature Name="visibility" Weight="1"/>
      </Growable>
      <Hierarchical label="hierarchical" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </Hierarchical>
      <PGmeans label="pgmeans" destination="uas/">
        <Feature Name="X" Weight="1"/>
        <Feature Name="Y" Weight="1"/>
        <Feature Name="Z" Weight="1"/>
        <Feature Name="visibility" Weight="1"/>
      </PGmeans>
      <Successive label="successive" destination="uas/">
        <PartitioningMethod Method="kmeans"/>
        <PartitioningMethod Method="kmeans"/>
      </Successive>
    </partitioning_methods>

    <partitioning_evaluators>
      <AVGEvaluator label="avg" Feature="visibility"/>
      <STDEvaluator label="std" Feature="visibility"/>
    </partitioning_evaluators-->
    <!-- ** ** -->

    <MPStrategies>

      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM1">
        <node_generation_method Method="UniformRandomFree" Number="10" Attempts="10"/>
        <!--node_generation_method Method="Gauss" Number="10" Attempts="10"/-->
        <!--node_generation_method Method="OBPRM" Number="10" Attempts="10"/-->
        <!--node_generation_method Method="MAPRM" Number="10" Attempts="10"/-->
        <node_connection_method Method="Closest"/>
        <!--component_connection_method Method="ConnectCCs"/-->
        <evaluation_method Method="NodesEval"/>
      </BasicPRM>

      <!-- Basic PRM restarted from an input roadmap input.map at the beginning of node connection -->
      <BasicPRM label="BasicPRM2" inputMap="input.map" startAt="node connection">
        <node_generation_method Method="UniformRandomFree" Number="10" Attempts="10"/>
        <node_connection_method Method="Closest"/>
        <component_connection_method Method="ConnectCCs"/>
        <evaluation_method Method="NodesEval"/>
      </BasicPRM>

      <!-- PRM* -->
      <BasicPRM label="OptimalPRM">
        <node_generation_method Method="UniformRandomFree" Number="100" Attempts="100"/>
        <node_connection_method Method="OptimalConnector"/>
        <evaluation_method Method="NodesEval"/>
      </BasicPRM>

      <!-- BasicRRT -->
      <BasicRRTStrategy label="BasicRRT" delta="10.0" minDist="0.001"
        numRoots="1" m="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="cd1" connectorLabel="Closest"
        query="s.query" gtype="UNDIRECTED_TREE" debug="false"
        evaluateGoal="true" growGoals = "true" extenderLabel="BERO">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- RRG -->
      <!-- If optimal connection is wanted, the correct connector needs to be selected -->
      <BasicRRTStrategy label="RRG" delta="10.0" minDist="0.001"
        numRoots="1" m="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="cd1" query="s.query" extenderLabel="BERO"
        connectorLabel="OptimalConnector" gtype="UNDIRECTED_GRAPH">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- RRT* -->
      <!-- The connector needs to be OptimalRewire for RRT* -->
      <BasicRRTStrategy label="RRTstar" delta="10.0" minDist="0.001"
        numRoots="1" m="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="cd1" query="s.query" extenderLabel="BERO"
        connectorLabel="OptimalRewire" gtype="UNDIRECTED_GRAPH">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- SRTStrategy -->
      <SRTStrategy label="SRT" delta="5" minDist="0.01"
        lpLabel="sl" dmLabel="euclidean" nfLabel="Nearest" vcLabel="cd1" eLabel="BERO"
        query="s.query" gtype="UNDIRECTED_GRAPH" debug="true" recordKeep="true"
        samples="5" expansions="10" closeCent="1" randCent="2" closePairs="2" connIter="5">
        <Evaluator label="ModQuery"/>
      </SRTStrategy>

      <!-- ObstacleBasedRRT -->
      <!-- The extender needs to be MixExtender for OBRRT -->
      <BasicRRTStrategy label="OBRRT" delta="10.0" minDist="0.001"
        numRoots="1" m="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="cd1" connectorLabel="Closest"
        query="s.query" gtype="UNDIRECTED_TREE" debug="false"
        evaluateGoal="true" growGoals = "true" extenderLabel="ME">
        <Evaluator label="NodesEval"/>
      </BasicRRTStrategy>

      <!-- MedialAxisRRT -->
      <MedialAxisRRT label="MARRT"
        delta="10.0" minDist="0.001" numRoots="1" growthFocus="0.00" lpLabel="sl" dmLabel="euclidean"
        nfLabel="Nearest" vcLabel="cd2" query="s.query" gtype="UNDIRECTED_TREE"
        clearanceType="exact" penetrationType="exact" useBBX="true"
        positional="true" epsilon="0.1" historyLength="20" debug="false"
        extendDist="1.0" maxIntermediates="10">
        <Evaluator label="NodesEval"/>
      </MedialAxisRRT>

      <!-- Adaptive RRT -->
      <AdaptiveRRT label="AdaptiveRRT" delta="10.0" minDist="0.001"
        numRoots="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean"
        nfLabel="BFNF" vcLabel="cd1" query="s.query"
        gtype="UNDIRECTED_TREE" gamma="0.1" cost="reward" debug="true">
        <Evaluator label="NodesEval"/>
        <GrowthSet threshold="0.0">
          <Extender label="BERO"/>
          <Extender label="BESO"/>
          <Extender label="ROVRO"/>
        </GrowthSet>
      </AdaptiveRRT>

      <!-- Toggle PRM -->
      <TogglePRMStrategy label="TogglePRM" priority="true">
        <Sampler methodLabel="UniformRandomFree" number="10" attempts="1"/>
        <Connector methodLabel="Closest"/>
        <ColConnector methodLabel="ToggleConnect"/>
        <Evaluator methodLabel="Query"/>
      </TogglePRMStrategy>

      <!-- Hybrid PRM -->
      <HybridPRM label="HybridPRM" iterations="10" num_samples="10"
        percent_random="0.5" bin_size="20" window_percent="0.5" Count_Cost="false" fixed_cost="false"
        resetting_learning="false" sampler_selection_distribution="window_hybrid">
        <node_generation_method Method="Uniform" initial_cost="1"/>
        <node_generation_method Method="Gauss" initial_cost="1"/>
        <node_connection_method Method="Closest"/>
        <stat_nf_method Method="BFNF"/>
        <evaluation_method Method="Query"/>
      </HybridPRM>

      <!-- UAStrategy -->
      <UAStrategy label="UAPRM" iterations="10" num_samples="10">
        <training_strategy Strategy="PRM1"/>
        <region_identifier Method="kmeans"/>
        <distribution_feature Feature="visibility"/>
        <region_strategy Strategy="Hybrid"/>
        <!--evaluation_method Method="NodesEval"/-->
        <evaluation_method Method="Query"/>
      </UAStrategy>

      <!-- Compare  -->
      <Compare label="Comparer" iterations="1" num_samples="10">
        <input Method="rmpinput1"/>
        <input Method="rmpinput2"/>
        <!--comparer_method Method="ConnectableComponent"/-->
        <!--comparer_method Method="RandomConnect"/-->
        <comparer_method Method="RegionCoverageComparer"/>
      </Compare>

      <!-- EvaluateMapStrategy -->
      <EvaluateMapStrategy label="EvaluateMapStrategy" mapFilename="zigzag.map">
        <Evaluator label="NodesEval"/>
      </EvaluateMapStrategy>

      <UtilityGuidedGenerator label="UtilityGuided" vcLabel="cd1" nfLabel="BFNF" connectorLabel="Closest">
        <Evaluator label="NodesEval"/>
      </UtilityGuidedGenerator>

      <!-- MultiStrategy -->
      <MultiStrategy label="MultiStrategy">
        <MPStrategy Method="BasicPRM1"/>
        <MPStrategy Method="AdaptiveRRT"/>
      </MultiStrategy>

        <!-- Parallel Strategiees and Methods *********COMPILE UNDER PARALLEL OPTION **********-->
      <BasicParallelPRM label="BasicParallelPRM" iterations="1" debug="true">
        <node_generation_method Method="UniformRandom" Number="10"/>
        <node_connection_method Method="Closest"/>
      </BasicParallelPRM>

      <RegularSubdivisionMethod label="RegularSubdivisionMethod" iterations="1" debug="true">
        <node_generation_method Method="UniformRandomFree" Number="100"/>
        <node_connection_method Method="Closest"/>
        <!--sequential_strategy  Strategy="BasicPRM1"/-->
        <num_row nRow = "4"/>
        <n_col nCol = "4"/>
        <num_runs nRuns = "1"/>
        <overlap xeps = "0.25" yeps = "0.25" zeps = "0"/>
        <region_connect_k k1 = "1" k2 = "1" nf = "BFNF" lp= "sl" type = "random"/>
      </RegularSubdivisionMethod>

      <TogglePRMStrategyWithRRT label="SparkToggle" maxNPCCSize="2" initSamples="10" maxRRTSize="100" attemptRatio="10"
        delta="5" minDist="0.1" vcLabel="cd1" nfLabel="BFNF" nfVertexLabel="Nearest" trimDepth="2"
        dmLabel="euclidean" cLabel="SparkPRMConnector" eLabel="BERO" priority="false" growthFocus="0.25"
        checkEdgeCases="true" checkImportant="true" trimAll="true" biasConnect="true" recordKeep="true" rrtDebug="false">
        <Sampler methodLabel="UniformRandomFree" number="10" attempts="10"/>
        <Connector methodLabel="ToggleConnect"/>
        <ColConnector methodLabel="ToggleConnect"/>
        <Evaluator methodLabel="ModQuery"/>
      </TogglePRMStrategyWithRRT>

      <BasicPRMWithRRT label="SparkUniform" maxNPCCSize="2" initSamples="2" maxRRTSize="100" attemptRatio="10"
        delta="5" minDist="0.01" vcLabel="cd1" nfLabel="BFNF" nfVertexLabel="Nearest" trimDepth="2"
        dmLabel="euclidean" cLabel="SparkPRMConnector" eLabel="BERO" growthFocus="0.25"
        checkEdgeCases="true" checkImportant="true" trimAll="true" biasConnect="true" recordKeep="true" rrtDebug="false">
        <node_generation_method Method="UniformRandomFree" Number="10" Attempts="10"/>
        <node_connection_method Method="Closest"/>
        <evaluation_method Method="ModQuery"/>
      </BasicPRMWithRRT>

      <!-- Visibility Based PRM Strategy -->
      <VisibilityBasedPRM label="VBPRM" sampler="UniformRandomFree"
        vcLabel="cd1" lpLabel="sl"
        maxFailedIterations="20" debug="false"/>

      <!-- Region Strategy -->
      <RegionStrategy label="RegionStrategy" samplerLabel="UniformRandomFreePQP" connectionLabel="Closest"/>
      <!-- Paths Strategy -->
      <PathsStrategy label="PathsStrategy"/>

      <!-- Spark Region Strategy -->
      <SparkRegionWithRRT label="SparkRegion" samplerLabel="UniformRandomFreePQP" connectionLabel="Closest"   
        maxNPCCSize="2" initSamples="0" maxRRTSize="100" attemptRatio="10"
        delta="5" minDist="0.01" vcLabel="cd1" nfLabel="BFNF" nfVertexLabel="Nearest" trimDepth="2"
        dmLabel="euclidean" cLabel="SparkPRMConnector" eLabel="BERO" growthFocus="0.5"
        checkEdgeCases="true" checkImportant="true" trimAll="true" biasConnect="true" recordKeep="true" rrtDebug="false">
        <node_generation_method Method="UniformRandomFree" Number="10" Attempts="10"/>
        <node_connection_method Method="Closest"/>
        <evaluation_method Method="ModQuery"/>
      </SparkRegionWithRRT>

      <!-- BasicRRT -->
      <RegionRRT label="RegionRRT" connectionLabel="Closest" delta="0.25" minDist="0.001" 
        numRoots="1" m="1" growthFocus="0.01" lpLabel="sl" dmLabel="euclidean" nfLabel="Nearest" 
        vcLabel="cd1" connectorLabel="Closest" query="s.query" gtype="UNDIRECTED_TREE" 
        debug="false" evaluateGoal="true" growGoals = "false" extenderLabel="BERO">
        <Evaluator label="NodesEval"/>
      </RegionRRT>
    </MPStrategies>

    <Solver mpStrategyLabel="RegionRRT" seed="123456789"  baseFilename="Basic" vizmoDebug="true"/>
    <!-- MPProblem allows multiple solvers to be specified and executed. -->
    <!--Solver mpStrategyLabel="BasicPRM2" seed="12345678" baseFilename="Basic2" vizmoDebug="true"/-->

  </MPProblem>
</MotionPlanning>
