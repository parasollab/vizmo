# These definitions assume that the default for mpiCC is the specified
# compiler extension.  For example, if you specify LINUX_g++, g++ is assumed
# to be the default compiler for mpiCC.  It may be necessary to set
# environment variables (e.g., MPICH_CCC, LAMHCP) and adjust paths to enable
# the desired compiler if it differs from the default.

ifeq ($(platform), HP_aCC) #Hewlett Packard aCC B3910B A.03.27
  CC       = mpiCC
  CFLAGS   = -AA -D_HPUX_SOURCE +W930 -D_POSIX_C_SOURCE=199506L -D_REENTRANT -D_RWSTD_MULTI_THREAD -D_STAPL_COMM -D_STL_PORT -I$(STAPL)/include/stlport/ -I$(STAPL)/include/
  RTS_OPT  = +O2 -D_SEND_BUF_MAX=1024 -D_CACHE_LINE_SIZE=64 -D_BUSY_WAIT_MAX=0
  USER_OPT = +O1
  LIB      = $(STAPL)/lib/runtime.o $(STAPL)/lib/libstlport_aCC.a -lpthread
  LD       = ld -r
  AR	   = ar cr
  staplrun = export STAPL_NUM_THREADS=$(2); mpirun -np $(1)
endif

ifeq ($(platform), IBM_xlC) #IBM VisualAge C++ 5
  CC       = mpCC_r
  CFLAGS   = -blpdata -bmaxdata:0x80000000 -D_STAPL_COMM -D_STL_PORT -I$(STAPL)/include/stlport/ -I$(STAPL)/include/
  RTS_OPT  = -cpp -O5 -qstrict -D_THREAD_SAFE_MPI=1 -D_SEND_BUF_MAX=8192 -D_CACHE_LINE_SIZE=128 -D_BUSY_WAIT_MAX=0
  USER_OPT = -O2
  LIB      = $(STAPL)/lib/runtime.o $(STAPL)/lib/libstlport_gcc.a -lm
  LD       = ld -r
  AR	   = ar cr
  staplrun = export STAPL_NUM_THREADS=$(2); export MP_RMPOOL=1; export MP_NODES=1; export MP_TASKS_PER_NODE=$(1); poe
endif

ifeq ($(platform), LINUX_g++) #GNU C++ 2.96 - 3.2.1
  CC       = mpiCC
  CFLAGS   = -D_STAPL_COMM -D_STL_PORT -I$(STAPL)/include/stlport/ -I$(STAPL)/include/
  RTS_OPT  = -O3 -D_SEND_BUF_MAX=4096 -D_CACHE_LINE_SIZE=32 -D_BUSY_WAIT_MAX=1 
  USER_OPT = -O2
  LIB      = $(STAPL)/lib/runtime.o $(STAPL)/lib/libstlport_gcc.a -lrt -lpthread
  LD       = ld -r
  AR	   = ar cr
  staplrun = mpirun -np $(1) -x STAPL_NUM_THREADS=$(2)
endif

ifeq ($(platform), LINUX_KCC) #KAI C++ 4.0f
# These flags assume the mpich installation on brainscan.cs.tamu.edu
#  MPI_CFLAGS = -DUSE_STDARG -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDARG_H=1 -DUSE_STDARG=1 -DMALLOC_RET_VOID=1 -I/usr/local/mpich-1.2.4/include
#  MPI_LIB    = -L/usr/local/mpich-1.2.4/lib -lpmpich++ -lmpich

# These flags assume the LAM installation in brainscan.cs.tamu.edu
  MPI_CFLAGS =
  MPI_LIB    = -llammpi++ -llammpio -lpmpi -llamf77mpi -lmpi -llam -lnsl -lutil

  CC       = KCC
  CFLAGS   = --no_linux_headers -D_STAPL_MPI -D_STL_PORT -I$(STAPL)/include/stlport/ -I$(STAPL)/include/ $(MPI_CFLAGS)
  RTS_OPT  = +K3 -O3 -D_SEND_BUF_MAX=4096 -D_CACHE_LINE_SIZE=32 -D_BUSY_WAIT_MAX=1
  USER_OPT = +K2 -O2
  LIB      = $(STAPL)/lib/runtime.o $(STAPL)/lib/libstlport_gcc.a -lm $(MPI_LIB)
  LD       = ld -r
  AR	   = ar cr
  staplrun = export STAPL_NUM_THREADS=$(2); mpirun -np $(1)
endif

ifeq ($(platform), SGI_CC) #SGI MIPSpro C++ 7.3.1.3m
  CC       = CC
  CFLAGS   = -mp -n32 -ansi -LANG:std -woff 3333 -D_STAPL_COMM -D_STL_PORT -I$(STAPL)/include/stlport/ -I$(STAPL)/include/
  RTS_OPT  = -O3 -D_SEND_BUF_MAX=8192 -D_CACHE_LINE_SIZE=128 -D_BUSY_WAIT_MAX=0
  USER_OPT = -O2
  LIB      = $(STAPL)/lib/runtime.o $(STAPL)/lib/libstlport_gcc.a -lm -lmpi++ -lmpi -rpath $(STAPL)/lib -L$(STAPL)/lib -lhoard
  LD       = ld -n32 -r
  AR	   = ar cr
  staplrun = export STAPL_NUM_THREADS=$(2); mpirun -np $(1)
endif


$(STAPL)/lib/primitives.o: $(STAPL)/include/runtime/GNUmakefile.COMM $(STAPL)/include/runtime/primitives.h $(STAPL)/include/runtime/comm_primitives.h $(STAPL)/include/runtime/comm_primitives.cc
	$(CC) $(RTS_OPT) $(CFLAGS) -o $(STAPL)/lib/primitives.o -c $(STAPL)/include/runtime/comm_primitives.cc
